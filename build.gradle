import java.text.SimpleDateFormat;
import java.text.DateFormat;
Calendar calendar = Calendar.getInstance();
DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");

group = 'com.strongloop';
String buildID = System.getenv()['BUILD_ID']
if (buildID == null){
    buildID = dateFormat.format(calendar.getTime())
}
version = version + "-" +  buildID

buildscript {
  repositories {
      mavenCentral()
  }
  dependencies {
      // Note: 0.5.5 changed the way how tasks are initialized
      // The new way makes it impossible to configure Javadoc artifact
      // for the maven-publish plugin. We have to stay with 0.5.4 for now.
      // See also the discussion in adt-dev: http://bit.ly/17IOTvG
      classpath 'com.android.tools.build:gradle:0.5.4'
  }
}

apply plugin: 'android-library'
apply plugin: 'maven-publish'

repositories {
    mavenLocal()
    mavenCentral()
}

android {
    compileSdkVersion 18
    buildToolsVersion "18.1.0"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 14
    }
}

dependencies {
    compile 'com.loopj.android:android-async-http:1.4.3'
    instrumentTestCompile 'com.google.guava:guava:15.0'
}

android.libraryVariants.all { variant ->
    task("generate${variant.name}Javadoc", type: Javadoc) {
        description "Generates Javadoc for $variant.name."
        source = variant.javaCompile.source
        ext.androidJar = "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
    }
}

task androidReleaseJar(type: Jar, dependsOn: assembleRelease) {
    from "$buildDir/classes/release/"
}

task androidJavadocsJar(type: Jar, dependsOn: generateReleaseJavadoc) {
    classifier = 'javadoc'
    from generateReleaseJavadoc.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.allSource
}

artifacts {
    archives androidReleaseJar
    archives androidSourcesJar
    archives androidJavadocsJar
}

publishing {
    publications {
        maven(MavenPublication) {
            artifact androidReleaseJar

            artifact androidSourcesJar {
                classifier 'sources'
            }

            artifact androidJavadocsJar {
                classifier 'javadoc'
            }

            pom.withXml {
                def root = asNode()

                root.appendNode('packaging', 'jar');

                def deps = new Node(root, 'dependencies')
                configurations.compile.allDependencies.each { dep ->
                    def node = new Node(deps, 'dependency')
                    new Node(node, 'groupId', dep.group)
                    new Node(node, 'artifactId', dep.name)
                    new Node(node, 'version', dep.version);
                }

                root.appendNode('name', 'strong-remoting-android')
                root.appendNode('description', 'Android client for strong-remoting')
                root.appendNode('url', 'https://github.com/strongloop/strong-remoting-android')

                def licenses = new Node(root, 'licenses');
                def lic = new Node(licenses, 'license');
                lic.appendNode('name', 'The MIT License')
                lic.appendNode('url', 'http://opensource.org/licenses/mit-license.php')
                lic.appendNode('distribution', 'repo')

                def scm = new Node(root, 'scm')
                scm.appendNode('connection', 'scm:git@github.com:strongloop/strong-remoting-android.git')
                scm.appendNode('developerConnection', 'scm:git@github.com:strongloop/strong-remoting-android.git')
                scm.appendNode('url', 'https://github.com/strongloop/strong-remoting-android')

                def devs = new Node(root, 'developers')
                def dev1 = new Node(devs, 'developer')
                dev1.appendNode('id', 'bajtos')
                dev1.appendNode('name', 'Miroslav Bajtos')
                dev1.appendNode('email', 'miroslav@strongloop.com')
                dev1.appendNode('organization', 'StrongLoop')
                dev1.appendNode('organizationUrl', 'http://strongloop.com/')
            }
        }
    }
}
